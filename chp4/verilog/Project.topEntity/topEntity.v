/* AUTOMATICALLY GENERATED VERILOG-2001 SOURCE CODE.
** GENERATED BY CLASH 1.9.0. DO NOT MODIFY.
*/
`default_nettype none
`timescale 100fs/100fs
module topEntity
    ( // Inputs
      input wire  CLK // clock


      // Outputs
    , output wire  LED
    );
  wire  c$app_arg;
  // src/chp4.hs:54:1-73
  wire [22:0] y;
  wire [23:0] c$case_alt;
  // src/chp4.hs:54:1-73
  wire [22:0] x;
  wire [23:0] c$case_alt_0;
  wire [23:0] result;
  wire [0:0] c$app_arg_0;
  // src/chp4.hs:59:13-15
  reg [23:0] r = {1'b1,23'd0};

  // resetGen begin
  // pragma translate_off
  reg  rst;
  localparam reset_period = 1000000 - 10 + (1 * 833330);
  initial begin
    #1 rst =  1 ;
    #reset_period rst =  0 ;
  end
  assign c$app_arg = rst;
  // pragma translate_on
  // resetGen end

  assign y = r[22:0];

  assign c$case_alt = (y == 23'd0) ? {1'b0,23'd0} : {1'b1,y - 23'd1};

  assign x = r[22:0];

  assign c$case_alt_0 = (x == 23'd6000023) ? {1'b1,23'd0} : {1'b0,x + 23'd1};

  assign result = r[23:23] ? c$case_alt : c$case_alt_0;

  assign c$app_arg_0 = r[23:23] ? 1'b0 : 1'b1;

  assign LED = (c$app_arg_0);

  // register begin
  always @(posedge CLK or  posedge  c$app_arg) begin : r_register
    if ( c$app_arg) begin
      r <= {1'b1,23'd0};
    end else begin
      r <= result;
    end
  end
  // register end


endmodule

